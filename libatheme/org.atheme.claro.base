/*
 * Copyright (c) 2005 Atheme Development Group
 * Rights to this code are as documented in doc/LICENSE.
 *
 * libatheme stuff.
 *
 * $Id: org.atheme.claro.base 3851 2005-11-11 12:55:45Z jilles $
 */

#ifndef __CLAROBASE
#define __CLAROBASE

/* hints for claro compile-assembly */
#ifdef _WIN32                   /* Windows */
#       ifdef I_AM_A_MODULE
#               define DLE __declspec (dllimport)
#               define E extern DLE
#       else
#               define DLE __declspec (dllexport)
#               define E extern DLE
#       endif
#else                           /* POSIX */
#       define E extern
#       define DLE
#endif

#define RF_LIVE         0x00000001      /* don't fork  */
#define RF_SHUTDOWN     0x00000002      /* shut down   */
#define RF_STARTING     0x00000004      /* starting up */
#define RF_RESTART      0x00000008      /* restart     */
#define RF_REHASHING    0x00000010      /* rehashing   */

/* log levels */
#define LG_NONE         0x00000001      /* don't log                */
#define LG_INFO         0x00000002      /* log general info         */
#define LG_ERROR        0x00000004      /* log real important stuff */
#define LG_IOERROR      0x00000008      /* log I/O errors. */
#define LG_DEBUG        0x00000010      /* log debugging stuff      */

#define BUFSIZE  1024            /* maximum size of a buffer */
#define HOSTLEN  64		 /* seems good enough */
#define MAX_EVENTS	1024	 /* that's enough events, really! */

#define HEAP_NODE       1024

#include "sysconf.h"
#include "stdinc.h"
#include "dlink.h"
#include "event.h"
#include "balloc.h"
#include "connection.h"
#include "sockio.h"
#include "hook.h"
#include "linker.h"
#include <org.atheme.claro.base.string>
#include <org.atheme.claro.base.memory>
#include <org.atheme.claro.base.datastream>

#define CURRTIME claro_state.currtime

typedef struct claro_state_ {
	uint32_t node;
	uint32_t event;
	time_t currtime;
	uint16_t maxfd;
} claro_state_t;

#define CLARO_ASM_MAGIC_V1		0x38a37cfb

typedef struct claro_assembly_ {
	uint32_t claro_asm_magic;
	char *claro_assembly_name;
	char *claro_assembly_vendor;
	char *claro_assembly_revision;
	char *claro_serial;
} claro_assembly_t;

#define DECLARE_CLARO_ASSEMBLY_V1(name, vendor, revision, serial)	\
	claro_assembly_t __claro_asmheader = { CLARO_ASM_MAGIC_V1, \
		name, vendor, revision, serial }

E claro_state_t claro_state;

E int runflags;

E void (*clog)(uint32_t, const char *, ...);
E void libclaro_init(void (*ilog)(uint32_t, const char *, ...));
E void init_dlink_nodes(void);
E void init_socket_queues(void);

#ifdef _WIN32

/* Windows has an extremely stupid gethostbyname() function. Oof! */
#define gethostbyname(a) gethostbyname_layer(a)

#endif

#endif
